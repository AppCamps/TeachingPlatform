#!/bin/bash

BRANCH="${BRANCH:-main}"


# Functions

usage()
{
    echo "Usage: [BRANCH=master] $(basename $0) <remote> [no-migrations]" >&2
    echo >&2
    echo "        remote         Name of git remote for Heroku app" >&2
    echo "        no-migrations  Deploy without running migrations" >&2
    echo >&2
    exit 1
}

has_remote()
{
    git remote | grep -qs "$REMOTE"
}

run_security_checks()
{
    if which brakeman > /dev/null; then
        brakeman
    fi
}

show_undeployed_changes()
{
    git fetch $REMOTE
    local range="$REMOTE/master..$BRANCH"
    local commits=$(git log --reverse --pretty=format:'%h | %cr: %s (%an)' $range)

    if [ -z "$commits" ]; then
        echo "Nothing to deploy"
        exit 1
    else
        echo -e "Undeployed commits:\n"
        echo -e "$commits"
        echo -e -n "\nPress enter to continue... "
        read
    fi
}

backup_database()
{
    if [ "$REMOTE" = "production" ]; then
        heroku pg:backups:capture DATABASE_URL --remote $REMOTE
    fi
}

deploy_changes()
{
    if [ "$REMOTE" = "production" ]; then
        git push $REMOTE $BRANCH:master
    else
        git push -f $REMOTE $BRANCH:master
    fi
}

migrate_database()
{
    if running_migrations; then
        heroku maintenance:on --remote $REMOTE
        heroku run rake db:migrate --remote $REMOTE
        heroku maintenance:off --remote $REMOTE
        # restart so rails_admin is reloaded with new database schema
        heroku restart --remote $REMOTE
    fi
}

running_migrations()
{
    [ "$COMMAND" != "no-migrations" ]
}


create_git_tags()
{
    DATE=`date -u`
    TAGNAME_INCLUDING_DATE="$REMOTE-`date -u "+%Y%m%d-%H%M%S"`"
    git tag -f -m 'Deployed at $DATE' $REMOTE
    git tag -f -m 'Deployed at $DATE' $TAGNAME_INCLUDING_DATE
    git push origin --tags -f
}


# Main program

set -e

REMOTE="$1"
COMMAND="$2"

[ -n "$DEBUG" ] && set -x
[ -z "$REMOTE" ] && usage

[ ! has_remote ] && usage

run_security_checks
show_undeployed_changes
backup_database
deploy_changes
migrate_database
create_git_tags
