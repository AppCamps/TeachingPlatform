// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditUserPassword /> renders form correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm>
    <Connect(Form(EditUserPassword))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="editUserPasswordForm"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      validate={[Function]}
    >
      <Form(EditUserPassword)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="editUserPasswordForm"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={true}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "currentPassword": Object {
              "count": 1,
              "name": "currentPassword",
              "type": "Field",
            },
            "password": Object {
              "count": 1,
              "name": "password",
              "type": "Field",
            },
            "passwordConfirmation": Object {
              "count": 1,
              "name": "passwordConfirmation",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={
          Object {
            "currentPassword": "Required",
            "password": "Required",
            "passwordConfirmation": "Required",
          }
        }
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={false}
        validExceptSubmit={false}
        validate={[Function]}
        values={Object {}}
      >
        <EditUserPassword
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          form="editUserPasswordForm"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={true}
          pristine={true}
          pure={true}
          reset={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={false}
          validate={[Function]}
        >
          <div
            className="container"
          >
            <div
              className="editUserPassword"
            >
              <h1
                className="heading"
              >
                Edit your data
              </h1>
              <div
                className="cancel"
              >
                <LinkWrapper
                  button={false}
                  className={null}
                  href={null}
                  isAction={false}
                  isGreen={false}
                  isSecondary={false}
                  leftIcon={null}
                  rightIcon={null}
                  to="/"
                >
                  <Link
                    className=""
                    href={null}
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    to="/"
                  >
                    <a
                      className=""
                      href={null}
                      onClick={[Function]}
                      style={Object {}}
                    >
                      cancel
                    </a>
                  </Link>
                </LinkWrapper>
              </div>
              <div
                className="editUserPasswordForm"
              >
                <h2>
                  Edit password
                </h2>
                <form
                  onSubmit={[Function]}
                >
                  <div>
                    <div
                      className="password"
                    >
                      <Field
                        component={[Function]}
                        label="Current password"
                        name="currentPassword"
                        required={true}
                        type="password"
                      >
                        <Connect(ConnectedField)
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "editUserPasswordForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": true,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": Object {
                                "currentPassword": Object {
                                  "count": 1,
                                  "name": "currentPassword",
                                  "type": "Field",
                                },
                                "password": Object {
                                  "count": 1,
                                  "name": "password",
                                  "type": "Field",
                                },
                                "passwordConfirmation": Object {
                                  "count": 1,
                                  "name": "passwordConfirmation",
                                  "type": "Field",
                                },
                              },
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldError": [Function],
                              "shouldValidate": [Function],
                              "shouldWarn": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {
                                "currentPassword": "Required",
                                "password": "Required",
                                "passwordConfirmation": "Required",
                              },
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": false,
                              "validExceptSubmit": false,
                              "validate": [Function],
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          component={[Function]}
                          label="Current password"
                          name="currentPassword"
                          normalize={[Function]}
                          required={true}
                          type="password"
                        >
                          <ConnectedField
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "editUserPasswordForm",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "currentPassword": Object {
                                    "count": 1,
                                    "name": "currentPassword",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "currentPassword": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            asyncValidating={false}
                            component={[Function]}
                            dirty={false}
                            dispatch={[Function]}
                            label="Current password"
                            name="currentPassword"
                            normalize={[Function]}
                            pristine={true}
                            required={true}
                            syncError="Required"
                            type="password"
                          >
                            <InputWithLabel
                              autoFocus={false}
                              className={null}
                              disabled={null}
                              input={
                                Object {
                                  "name": "currentPassword",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onDragStart": [Function],
                                  "onDrop": [Function],
                                  "onFocus": [Function],
                                  "value": "",
                                }
                              }
                              label="Current password"
                              max={null}
                              meta={
                                Object {
                                  "active": false,
                                  "asyncValidating": false,
                                  "autofilled": false,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "error": "Required",
                                  "form": "editUserPasswordForm",
                                  "initial": undefined,
                                  "invalid": true,
                                  "pristine": true,
                                  "submitFailed": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": false,
                                  "visited": false,
                                  "warning": undefined,
                                }
                              }
                              min={null}
                              placeholder={null}
                              required={true}
                              type="password"
                            >
                              <div
                                className="inputWithLabel"
                              >
                                <Label
                                  for="currentPassword"
                                  required={true}
                                  text="Current password"
                                >
                                  <label
                                    className="label"
                                    htmlFor="currentPassword"
                                  >
                                    Current password
                                     
                                    <abbr
                                      title="Required"
                                    >
                                      *
                                    </abbr>
                                  </label>
                                </Label>
                                <Input
                                  autoFocus={false}
                                  disabled={null}
                                  hasError={false}
                                  max={null}
                                  min={null}
                                  name="currentPassword"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  placeholder={null}
                                  type="password"
                                  value=""
                                >
                                  <input
                                    autoFocus={false}
                                    className="input"
                                    disabled={null}
                                    max={null}
                                    min={null}
                                    name="currentPassword"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    type="password"
                                    value=""
                                  />
                                </Input>
                              </div>
                            </InputWithLabel>
                          </ConnectedField>
                        </Connect(ConnectedField)>
                      </Field>
                    </div>
                    <div
                      className="password"
                    >
                      <Field
                        component={[Function]}
                        label="New password"
                        name="password"
                        required={true}
                        type="password"
                      >
                        <Connect(ConnectedField)
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "editUserPasswordForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": true,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": Object {
                                "currentPassword": Object {
                                  "count": 1,
                                  "name": "currentPassword",
                                  "type": "Field",
                                },
                                "password": Object {
                                  "count": 1,
                                  "name": "password",
                                  "type": "Field",
                                },
                                "passwordConfirmation": Object {
                                  "count": 1,
                                  "name": "passwordConfirmation",
                                  "type": "Field",
                                },
                              },
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldError": [Function],
                              "shouldValidate": [Function],
                              "shouldWarn": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {
                                "currentPassword": "Required",
                                "password": "Required",
                                "passwordConfirmation": "Required",
                              },
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": false,
                              "validExceptSubmit": false,
                              "validate": [Function],
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          component={[Function]}
                          label="New password"
                          name="password"
                          normalize={[Function]}
                          required={true}
                          type="password"
                        >
                          <ConnectedField
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "editUserPasswordForm",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "currentPassword": Object {
                                    "count": 1,
                                    "name": "currentPassword",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "currentPassword": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            asyncValidating={false}
                            component={[Function]}
                            dirty={false}
                            dispatch={[Function]}
                            label="New password"
                            name="password"
                            normalize={[Function]}
                            pristine={true}
                            required={true}
                            syncError="Required"
                            type="password"
                          >
                            <InputWithLabel
                              autoFocus={false}
                              className={null}
                              disabled={null}
                              input={
                                Object {
                                  "name": "password",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onDragStart": [Function],
                                  "onDrop": [Function],
                                  "onFocus": [Function],
                                  "value": "",
                                }
                              }
                              label="New password"
                              max={null}
                              meta={
                                Object {
                                  "active": false,
                                  "asyncValidating": false,
                                  "autofilled": false,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "error": "Required",
                                  "form": "editUserPasswordForm",
                                  "initial": undefined,
                                  "invalid": true,
                                  "pristine": true,
                                  "submitFailed": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": false,
                                  "visited": false,
                                  "warning": undefined,
                                }
                              }
                              min={null}
                              placeholder={null}
                              required={true}
                              type="password"
                            >
                              <div
                                className="inputWithLabel"
                              >
                                <Label
                                  for="password"
                                  required={true}
                                  text="New password"
                                >
                                  <label
                                    className="label"
                                    htmlFor="password"
                                  >
                                    New password
                                     
                                    <abbr
                                      title="Required"
                                    >
                                      *
                                    </abbr>
                                  </label>
                                </Label>
                                <Input
                                  autoFocus={false}
                                  disabled={null}
                                  hasError={false}
                                  max={null}
                                  min={null}
                                  name="password"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  placeholder={null}
                                  type="password"
                                  value=""
                                >
                                  <input
                                    autoFocus={false}
                                    className="input"
                                    disabled={null}
                                    max={null}
                                    min={null}
                                    name="password"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    type="password"
                                    value=""
                                  />
                                </Input>
                              </div>
                            </InputWithLabel>
                          </ConnectedField>
                        </Connect(ConnectedField)>
                      </Field>
                    </div>
                    <div
                      className="password"
                    >
                      <Field
                        component={[Function]}
                        label="Confirm new password"
                        name="passwordConfirmation"
                        required={true}
                        type="password"
                      >
                        <Connect(ConnectedField)
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "editUserPasswordForm",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": true,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": Object {
                                "currentPassword": Object {
                                  "count": 1,
                                  "name": "currentPassword",
                                  "type": "Field",
                                },
                                "password": Object {
                                  "count": 1,
                                  "name": "password",
                                  "type": "Field",
                                },
                                "passwordConfirmation": Object {
                                  "count": 1,
                                  "name": "passwordConfirmation",
                                  "type": "Field",
                                },
                              },
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldError": [Function],
                              "shouldValidate": [Function],
                              "shouldWarn": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {
                                "currentPassword": "Required",
                                "password": "Required",
                                "passwordConfirmation": "Required",
                              },
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": false,
                              "validExceptSubmit": false,
                              "validate": [Function],
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          component={[Function]}
                          label="Confirm new password"
                          name="passwordConfirmation"
                          normalize={[Function]}
                          required={true}
                          type="password"
                        >
                          <ConnectedField
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "editUserPasswordForm",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "currentPassword": Object {
                                    "count": 1,
                                    "name": "currentPassword",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "currentPassword": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            asyncValidating={false}
                            component={[Function]}
                            dirty={false}
                            dispatch={[Function]}
                            label="Confirm new password"
                            name="passwordConfirmation"
                            normalize={[Function]}
                            pristine={true}
                            required={true}
                            syncError="Required"
                            type="password"
                          >
                            <InputWithLabel
                              autoFocus={false}
                              className={null}
                              disabled={null}
                              input={
                                Object {
                                  "name": "passwordConfirmation",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onDragStart": [Function],
                                  "onDrop": [Function],
                                  "onFocus": [Function],
                                  "value": "",
                                }
                              }
                              label="Confirm new password"
                              max={null}
                              meta={
                                Object {
                                  "active": false,
                                  "asyncValidating": false,
                                  "autofilled": false,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "error": "Required",
                                  "form": "editUserPasswordForm",
                                  "initial": undefined,
                                  "invalid": true,
                                  "pristine": true,
                                  "submitFailed": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": false,
                                  "visited": false,
                                  "warning": undefined,
                                }
                              }
                              min={null}
                              placeholder={null}
                              required={true}
                              type="password"
                            >
                              <div
                                className="inputWithLabel"
                              >
                                <Label
                                  for="passwordConfirmation"
                                  required={true}
                                  text="Confirm new password"
                                >
                                  <label
                                    className="label"
                                    htmlFor="passwordConfirmation"
                                  >
                                    Confirm new password
                                     
                                    <abbr
                                      title="Required"
                                    >
                                      *
                                    </abbr>
                                  </label>
                                </Label>
                                <Input
                                  autoFocus={false}
                                  disabled={null}
                                  hasError={false}
                                  max={null}
                                  min={null}
                                  name="passwordConfirmation"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  placeholder={null}
                                  type="password"
                                  value=""
                                >
                                  <input
                                    autoFocus={false}
                                    className="input"
                                    disabled={null}
                                    max={null}
                                    min={null}
                                    name="passwordConfirmation"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    type="password"
                                    value=""
                                  />
                                </Input>
                              </div>
                            </InputWithLabel>
                          </ConnectedField>
                        </Connect(ConnectedField)>
                      </Field>
                    </div>
                  </div>
                  <div
                    className="actions"
                  >
                    <Spinner
                      visible={false}
                    >
                      <div
                        className="spinner"
                      />
                    </Spinner>
                    <Button
                      className={null}
                      disabled={false}
                      isAction={true}
                      isFullWidth={false}
                      isGreen={false}
                      isSecondary={false}
                      leftIcon={null}
                      onClick={[Function]}
                      rightIcon={null}
                      style={Object {}}
                      type="submit"
                    >
                      <button
                        className="button buttonAction buttonClickable"
                        disabled={false}
                        onClick={[Function]}
                        style={Object {}}
                        type="submit"
                      >
                        Save
                      </button>
                    </Button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </EditUserPassword>
      </Form(EditUserPassword)>
    </Connect(Form(EditUserPassword))>
  </ReduxForm>
</Provider>
`;
