// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Registration /> newsletters shows parent newsletter form for role parent 1`] = `
<div
  id="mc_embed_signup"
>
  <h2
    className="heading"
  >
    Thank you for you interest in App Camps
  </h2>
  <div
    className="info"
  >
    We are sorry, but this platform was built with teachers and course instructors in mind. Nonetheless we provide a newsletter for parents, where we will keep you informed about programming, computer science and technology.
  </div>
</div>
`;

exports[`<Registration /> newsletters shows parent newsletter form for role student 1`] = `
<div
  id="mc_embed_signup"
>
  <h2
    className="heading"
  >
    Thank you for you interest in App Camps
  </h2>
  <div
    className="info"
  >
    We are sorry, but this platform was built with teachers and course instructors in mind. Nonetheless we provide a newsletter for students like you, where we will keep you informed about programming, computer science and technology.
    <p>
      Please read our blog post
    </p>
  </div>
</div>
`;

exports[`<Registration /> renders form correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm>
    <Connect(Form(Registration))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="registration"
      getFormState={[Function]}
      initialValues={undefined}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      validate={[Function]}
    >
      <Form(Registration)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncErrors={undefined}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        error={undefined}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="registration"
        getFormState={[Function]}
        initialValues={undefined}
        initialize={[Function]}
        initialized={false}
        invalid={true}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "comment": Object {
              "count": 1,
              "name": "comment",
              "type": "Field",
            },
            "email": Object {
              "count": 1,
              "name": "email",
              "type": "Field",
            },
            "firstName": Object {
              "count": 1,
              "name": "firstName",
              "type": "Field",
            },
            "lastName": Object {
              "count": 1,
              "name": "lastName",
              "type": "Field",
            },
            "password": Object {
              "count": 1,
              "name": "password",
              "type": "Field",
            },
            "passwordConfirmation": Object {
              "count": 1,
              "name": "passwordConfirmation",
              "type": "Field",
            },
            "privacyPolicyAccepted": Object {
              "count": 1,
              "name": "privacyPolicyAccepted",
              "type": "Field",
            },
            "referal": Object {
              "count": 1,
              "name": "referal",
              "type": "Field",
            },
            "role": Object {
              "count": 1,
              "name": "role",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={
          Object {
            "email": "Required",
            "firstName": "Required",
            "lastName": "Required",
            "password": "Required",
            "passwordConfirmation": "Required",
            "privacyPolicyAccepted": "You need to confirm our privacy policy",
            "referal": "Required",
            "role": "Required",
          }
        }
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        triggerSubmit={undefined}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={false}
        validExceptSubmit={false}
        validate={[Function]}
        values={Object {}}
        warning={undefined}
      >
        <Registration
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          error={undefined}
          form="registration"
          handleSubmit={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={true}
          pristine={true}
          pure={true}
          reset={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          triggerSubmit={undefined}
          untouch={[Function]}
          valid={false}
          validate={[Function]}
          warning={undefined}
        >
          <div
            className="container"
          >
            <div
              className="registration"
            >
              <h1
                className="heading"
              >
                Please sign up for free access
              </h1>
              <div
                className="signInLink"
              >
                Already registered? {signIn}
              </div>
              <div
                className="registrationForm"
              >
                <form
                  onSubmit={[Function]}
                >
                  <div>
                    <div
                      className="role"
                    >
                      <Field
                        autoFocus={true}
                        component={[Function]}
                        label="I am a"
                        name="role"
                        optionClassName="roleOption"
                        options={
                          Array [
                            Object {
                              "label": "Teacher",
                              "value": "role_teacher",
                            },
                            Object {
                              "label": "Course instructor",
                              "value": "role_course_instructor",
                            },
                            Object {
                              "label": "Parent",
                              "value": "parent",
                            },
                            Object {
                              "label": "Student",
                              "value": "student",
                            },
                          ]
                        }
                        required={true}
                      >
                        <Connect(ConnectedField)
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "registration",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": undefined,
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": true,
                              "keepDirtyOnReinitialize": false,
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": Object {
                                "comment": Object {
                                  "count": 1,
                                  "name": "comment",
                                  "type": "Field",
                                },
                                "email": Object {
                                  "count": 1,
                                  "name": "email",
                                  "type": "Field",
                                },
                                "firstName": Object {
                                  "count": 1,
                                  "name": "firstName",
                                  "type": "Field",
                                },
                                "lastName": Object {
                                  "count": 1,
                                  "name": "lastName",
                                  "type": "Field",
                                },
                                "password": Object {
                                  "count": 1,
                                  "name": "password",
                                  "type": "Field",
                                },
                                "passwordConfirmation": Object {
                                  "count": 1,
                                  "name": "passwordConfirmation",
                                  "type": "Field",
                                },
                                "privacyPolicyAccepted": Object {
                                  "count": 1,
                                  "name": "privacyPolicyAccepted",
                                  "type": "Field",
                                },
                                "referal": Object {
                                  "count": 1,
                                  "name": "referal",
                                  "type": "Field",
                                },
                                "role": Object {
                                  "count": 1,
                                  "name": "role",
                                  "type": "Field",
                                },
                              },
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldError": [Function],
                              "shouldValidate": [Function],
                              "shouldWarn": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {
                                "email": "Required",
                                "firstName": "Required",
                                "lastName": "Required",
                                "password": "Required",
                                "passwordConfirmation": "Required",
                                "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                "referal": "Required",
                                "role": "Required",
                              },
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": false,
                              "validExceptSubmit": false,
                              "validate": [Function],
                              "values": Object {},
                              "warning": undefined,
                            }
                          }
                          autoFocus={true}
                          component={[Function]}
                          label="I am a"
                          name="role"
                          normalize={[Function]}
                          optionClassName="roleOption"
                          options={
                            Array [
                              Object {
                                "label": "Teacher",
                                "value": "role_teacher",
                              },
                              Object {
                                "label": "Course instructor",
                                "value": "role_course_instructor",
                              },
                              Object {
                                "label": "Parent",
                                "value": "parent",
                              },
                              Object {
                                "label": "Student",
                                "value": "student",
                              },
                            ]
                          }
                          required={true}
                        >
                          <ConnectedField
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "registration",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "comment": Object {
                                    "count": 1,
                                    "name": "comment",
                                    "type": "Field",
                                  },
                                  "email": Object {
                                    "count": 1,
                                    "name": "email",
                                    "type": "Field",
                                  },
                                  "firstName": Object {
                                    "count": 1,
                                    "name": "firstName",
                                    "type": "Field",
                                  },
                                  "lastName": Object {
                                    "count": 1,
                                    "name": "lastName",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                  "privacyPolicyAccepted": Object {
                                    "count": 1,
                                    "name": "privacyPolicyAccepted",
                                    "type": "Field",
                                  },
                                  "referal": Object {
                                    "count": 1,
                                    "name": "referal",
                                    "type": "Field",
                                  },
                                  "role": Object {
                                    "count": 1,
                                    "name": "role",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "email": "Required",
                                  "firstName": "Required",
                                  "lastName": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                  "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                  "referal": "Required",
                                  "role": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            _value={undefined}
                            asyncError={undefined}
                            asyncValidating={false}
                            autoFocus={true}
                            component={[Function]}
                            dirty={false}
                            dispatch={[Function]}
                            initial={undefined}
                            label="I am a"
                            name="role"
                            normalize={[Function]}
                            optionClassName="roleOption"
                            options={
                              Array [
                                Object {
                                  "label": "Teacher",
                                  "value": "role_teacher",
                                },
                                Object {
                                  "label": "Course instructor",
                                  "value": "role_course_instructor",
                                },
                                Object {
                                  "label": "Parent",
                                  "value": "parent",
                                },
                                Object {
                                  "label": "Student",
                                  "value": "student",
                                },
                              ]
                            }
                            pristine={true}
                            required={true}
                            state={undefined}
                            submitError={undefined}
                            submitFailed={undefined}
                            submitting={undefined}
                            syncError="Required"
                            syncWarning={undefined}
                            value={undefined}
                          >
                            <RadioWithLabel
                              autoFocus={true}
                              input={
                                Object {
                                  "name": "role",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onDragStart": [Function],
                                  "onDrop": [Function],
                                  "onFocus": [Function],
                                  "value": "",
                                }
                              }
                              label="I am a"
                              meta={
                                Object {
                                  "active": false,
                                  "asyncValidating": false,
                                  "autofilled": false,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "error": "Required",
                                  "form": "registration",
                                  "initial": undefined,
                                  "invalid": true,
                                  "pristine": true,
                                  "submitFailed": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": false,
                                  "visited": false,
                                  "warning": undefined,
                                }
                              }
                              optionClassName="roleOption"
                              options={
                                Array [
                                  Object {
                                    "label": "Teacher",
                                    "value": "role_teacher",
                                  },
                                  Object {
                                    "label": "Course instructor",
                                    "value": "role_course_instructor",
                                  },
                                  Object {
                                    "label": "Parent",
                                    "value": "parent",
                                  },
                                  Object {
                                    "label": "Student",
                                    "value": "student",
                                  },
                                ]
                              }
                              required={true}
                            >
                              <div>
                                <div
                                  className={undefined}
                                >
                                  <Label
                                    for={null}
                                    required={true}
                                    text="I am a"
                                  >
                                    <label
                                      className="label"
                                      htmlFor={null}
                                    >
                                      I am a
                                       
                                      <abbr
                                        title="Required"
                                      >
                                        *
                                      </abbr>
                                    </label>
                                  </Label>
                                </div>
                                <RadioInput
                                  autoFocus={true}
                                  checked={false}
                                  className="roleOption"
                                  disabled={false}
                                  hasError={false}
                                  key="Teacher"
                                  label="Teacher"
                                  name="role"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="role_teacher"
                                >
                                  <label
                                    className="label roleOption"
                                  >
                                    <input
                                      autoFocus={true}
                                      checked={false}
                                      className="input"
                                      disabled={false}
                                      name="role"
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      type="radio"
                                      value="role_teacher"
                                    />
                                    <span />
                                    Teacher
                                  </label>
                                </RadioInput>
                                <RadioInput
                                  autoFocus={false}
                                  checked={false}
                                  className="roleOption"
                                  disabled={false}
                                  hasError={false}
                                  key="Course instructor"
                                  label="Course instructor"
                                  name="role"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="role_course_instructor"
                                >
                                  <label
                                    className="label roleOption"
                                  >
                                    <input
                                      autoFocus={false}
                                      checked={false}
                                      className="input"
                                      disabled={false}
                                      name="role"
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      type="radio"
                                      value="role_course_instructor"
                                    />
                                    <span />
                                    Course instructor
                                  </label>
                                </RadioInput>
                                <RadioInput
                                  autoFocus={false}
                                  checked={false}
                                  className="roleOption"
                                  disabled={false}
                                  hasError={false}
                                  key="Parent"
                                  label="Parent"
                                  name="role"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="parent"
                                >
                                  <label
                                    className="label roleOption"
                                  >
                                    <input
                                      autoFocus={false}
                                      checked={false}
                                      className="input"
                                      disabled={false}
                                      name="role"
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      type="radio"
                                      value="parent"
                                    />
                                    <span />
                                    Parent
                                  </label>
                                </RadioInput>
                                <RadioInput
                                  autoFocus={false}
                                  checked={false}
                                  className="roleOption"
                                  disabled={false}
                                  hasError={false}
                                  key="Student"
                                  label="Student"
                                  name="role"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onFocus={[Function]}
                                  value="student"
                                >
                                  <label
                                    className="label roleOption"
                                  >
                                    <input
                                      autoFocus={false}
                                      checked={false}
                                      className="input"
                                      disabled={false}
                                      name="role"
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      type="radio"
                                      value="student"
                                    />
                                    <span />
                                    Student
                                  </label>
                                </RadioInput>
                              </div>
                            </RadioWithLabel>
                          </ConnectedField>
                        </Connect(ConnectedField)>
                      </Field>
                    </div>
                  </div>
                  <div>
                    <div>
                      <div
                        className="firstName"
                      >
                        <Field
                          component={[Function]}
                          label="First name"
                          name="firstName"
                          required={true}
                        >
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "registration",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "comment": Object {
                                    "count": 1,
                                    "name": "comment",
                                    "type": "Field",
                                  },
                                  "email": Object {
                                    "count": 1,
                                    "name": "email",
                                    "type": "Field",
                                  },
                                  "firstName": Object {
                                    "count": 1,
                                    "name": "firstName",
                                    "type": "Field",
                                  },
                                  "lastName": Object {
                                    "count": 1,
                                    "name": "lastName",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                  "privacyPolicyAccepted": Object {
                                    "count": 1,
                                    "name": "privacyPolicyAccepted",
                                    "type": "Field",
                                  },
                                  "referal": Object {
                                    "count": 1,
                                    "name": "referal",
                                    "type": "Field",
                                  },
                                  "role": Object {
                                    "count": 1,
                                    "name": "role",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "email": "Required",
                                  "firstName": "Required",
                                  "lastName": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                  "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                  "referal": "Required",
                                  "role": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            label="First name"
                            name="firstName"
                            normalize={[Function]}
                            required={true}
                          >
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "registration",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": true,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": Object {
                                    "comment": Object {
                                      "count": 1,
                                      "name": "comment",
                                      "type": "Field",
                                    },
                                    "email": Object {
                                      "count": 1,
                                      "name": "email",
                                      "type": "Field",
                                    },
                                    "firstName": Object {
                                      "count": 1,
                                      "name": "firstName",
                                      "type": "Field",
                                    },
                                    "lastName": Object {
                                      "count": 1,
                                      "name": "lastName",
                                      "type": "Field",
                                    },
                                    "password": Object {
                                      "count": 1,
                                      "name": "password",
                                      "type": "Field",
                                    },
                                    "passwordConfirmation": Object {
                                      "count": 1,
                                      "name": "passwordConfirmation",
                                      "type": "Field",
                                    },
                                    "privacyPolicyAccepted": Object {
                                      "count": 1,
                                      "name": "privacyPolicyAccepted",
                                      "type": "Field",
                                    },
                                    "referal": Object {
                                      "count": 1,
                                      "name": "referal",
                                      "type": "Field",
                                    },
                                    "role": Object {
                                      "count": 1,
                                      "name": "role",
                                      "type": "Field",
                                    },
                                  },
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldError": [Function],
                                  "shouldValidate": [Function],
                                  "shouldWarn": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {
                                    "email": "Required",
                                    "firstName": "Required",
                                    "lastName": "Required",
                                    "password": "Required",
                                    "passwordConfirmation": "Required",
                                    "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                    "referal": "Required",
                                    "role": "Required",
                                  },
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": false,
                                  "validExceptSubmit": false,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              _value={undefined}
                              asyncError={undefined}
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              initial={undefined}
                              label="First name"
                              name="firstName"
                              normalize={[Function]}
                              pristine={true}
                              required={true}
                              state={undefined}
                              submitError={undefined}
                              submitFailed={undefined}
                              submitting={undefined}
                              syncError="Required"
                              syncWarning={undefined}
                              value={undefined}
                            >
                              <InputWithLabel
                                autoFocus={false}
                                className={null}
                                disabled={null}
                                input={
                                  Object {
                                    "name": "firstName",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                label="First name"
                                max={null}
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": "Required",
                                    "form": "registration",
                                    "initial": undefined,
                                    "invalid": true,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": false,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                min={null}
                                placeholder={null}
                                required={true}
                              >
                                <div
                                  className="inputWithLabel"
                                >
                                  <Label
                                    for="firstName"
                                    required={true}
                                    text="First name"
                                  >
                                    <label
                                      className="label"
                                      htmlFor="firstName"
                                    >
                                      First name
                                       
                                      <abbr
                                        title="Required"
                                      >
                                        *
                                      </abbr>
                                    </label>
                                  </Label>
                                  <Input
                                    autoFocus={false}
                                    disabled={null}
                                    hasError={false}
                                    max={null}
                                    min={null}
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    type="text"
                                    value=""
                                  >
                                    <input
                                      autoFocus={false}
                                      className="input"
                                      disabled={null}
                                      max={null}
                                      min={null}
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder={null}
                                      type="text"
                                      value=""
                                    />
                                  </Input>
                                </div>
                              </InputWithLabel>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                      <div
                        className="lastName"
                      >
                        <Field
                          component={[Function]}
                          label="Last name"
                          name="lastName"
                          required={true}
                        >
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "registration",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "comment": Object {
                                    "count": 1,
                                    "name": "comment",
                                    "type": "Field",
                                  },
                                  "email": Object {
                                    "count": 1,
                                    "name": "email",
                                    "type": "Field",
                                  },
                                  "firstName": Object {
                                    "count": 1,
                                    "name": "firstName",
                                    "type": "Field",
                                  },
                                  "lastName": Object {
                                    "count": 1,
                                    "name": "lastName",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                  "privacyPolicyAccepted": Object {
                                    "count": 1,
                                    "name": "privacyPolicyAccepted",
                                    "type": "Field",
                                  },
                                  "referal": Object {
                                    "count": 1,
                                    "name": "referal",
                                    "type": "Field",
                                  },
                                  "role": Object {
                                    "count": 1,
                                    "name": "role",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "email": "Required",
                                  "firstName": "Required",
                                  "lastName": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                  "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                  "referal": "Required",
                                  "role": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            label="Last name"
                            name="lastName"
                            normalize={[Function]}
                            required={true}
                          >
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "registration",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": true,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": Object {
                                    "comment": Object {
                                      "count": 1,
                                      "name": "comment",
                                      "type": "Field",
                                    },
                                    "email": Object {
                                      "count": 1,
                                      "name": "email",
                                      "type": "Field",
                                    },
                                    "firstName": Object {
                                      "count": 1,
                                      "name": "firstName",
                                      "type": "Field",
                                    },
                                    "lastName": Object {
                                      "count": 1,
                                      "name": "lastName",
                                      "type": "Field",
                                    },
                                    "password": Object {
                                      "count": 1,
                                      "name": "password",
                                      "type": "Field",
                                    },
                                    "passwordConfirmation": Object {
                                      "count": 1,
                                      "name": "passwordConfirmation",
                                      "type": "Field",
                                    },
                                    "privacyPolicyAccepted": Object {
                                      "count": 1,
                                      "name": "privacyPolicyAccepted",
                                      "type": "Field",
                                    },
                                    "referal": Object {
                                      "count": 1,
                                      "name": "referal",
                                      "type": "Field",
                                    },
                                    "role": Object {
                                      "count": 1,
                                      "name": "role",
                                      "type": "Field",
                                    },
                                  },
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldError": [Function],
                                  "shouldValidate": [Function],
                                  "shouldWarn": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {
                                    "email": "Required",
                                    "firstName": "Required",
                                    "lastName": "Required",
                                    "password": "Required",
                                    "passwordConfirmation": "Required",
                                    "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                    "referal": "Required",
                                    "role": "Required",
                                  },
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": false,
                                  "validExceptSubmit": false,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              _value={undefined}
                              asyncError={undefined}
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              initial={undefined}
                              label="Last name"
                              name="lastName"
                              normalize={[Function]}
                              pristine={true}
                              required={true}
                              state={undefined}
                              submitError={undefined}
                              submitFailed={undefined}
                              submitting={undefined}
                              syncError="Required"
                              syncWarning={undefined}
                              value={undefined}
                            >
                              <InputWithLabel
                                autoFocus={false}
                                className={null}
                                disabled={null}
                                input={
                                  Object {
                                    "name": "lastName",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                label="Last name"
                                max={null}
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": "Required",
                                    "form": "registration",
                                    "initial": undefined,
                                    "invalid": true,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": false,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                min={null}
                                placeholder={null}
                                required={true}
                              >
                                <div
                                  className="inputWithLabel"
                                >
                                  <Label
                                    for="lastName"
                                    required={true}
                                    text="Last name"
                                  >
                                    <label
                                      className="label"
                                      htmlFor="lastName"
                                    >
                                      Last name
                                       
                                      <abbr
                                        title="Required"
                                      >
                                        *
                                      </abbr>
                                    </label>
                                  </Label>
                                  <Input
                                    autoFocus={false}
                                    disabled={null}
                                    hasError={false}
                                    max={null}
                                    min={null}
                                    name="lastName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    type="text"
                                    value=""
                                  >
                                    <input
                                      autoFocus={false}
                                      className="input"
                                      disabled={null}
                                      max={null}
                                      min={null}
                                      name="lastName"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder={null}
                                      type="text"
                                      value=""
                                    />
                                  </Input>
                                </div>
                              </InputWithLabel>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                    </div>
                    <div>
                      <div
                        className="email"
                      >
                        <Field
                          component={[Function]}
                          label="Email"
                          name="email"
                          required={true}
                        >
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "registration",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "comment": Object {
                                    "count": 1,
                                    "name": "comment",
                                    "type": "Field",
                                  },
                                  "email": Object {
                                    "count": 1,
                                    "name": "email",
                                    "type": "Field",
                                  },
                                  "firstName": Object {
                                    "count": 1,
                                    "name": "firstName",
                                    "type": "Field",
                                  },
                                  "lastName": Object {
                                    "count": 1,
                                    "name": "lastName",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                  "privacyPolicyAccepted": Object {
                                    "count": 1,
                                    "name": "privacyPolicyAccepted",
                                    "type": "Field",
                                  },
                                  "referal": Object {
                                    "count": 1,
                                    "name": "referal",
                                    "type": "Field",
                                  },
                                  "role": Object {
                                    "count": 1,
                                    "name": "role",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "email": "Required",
                                  "firstName": "Required",
                                  "lastName": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                  "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                  "referal": "Required",
                                  "role": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            label="Email"
                            name="email"
                            normalize={[Function]}
                            required={true}
                          >
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "registration",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": true,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": Object {
                                    "comment": Object {
                                      "count": 1,
                                      "name": "comment",
                                      "type": "Field",
                                    },
                                    "email": Object {
                                      "count": 1,
                                      "name": "email",
                                      "type": "Field",
                                    },
                                    "firstName": Object {
                                      "count": 1,
                                      "name": "firstName",
                                      "type": "Field",
                                    },
                                    "lastName": Object {
                                      "count": 1,
                                      "name": "lastName",
                                      "type": "Field",
                                    },
                                    "password": Object {
                                      "count": 1,
                                      "name": "password",
                                      "type": "Field",
                                    },
                                    "passwordConfirmation": Object {
                                      "count": 1,
                                      "name": "passwordConfirmation",
                                      "type": "Field",
                                    },
                                    "privacyPolicyAccepted": Object {
                                      "count": 1,
                                      "name": "privacyPolicyAccepted",
                                      "type": "Field",
                                    },
                                    "referal": Object {
                                      "count": 1,
                                      "name": "referal",
                                      "type": "Field",
                                    },
                                    "role": Object {
                                      "count": 1,
                                      "name": "role",
                                      "type": "Field",
                                    },
                                  },
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldError": [Function],
                                  "shouldValidate": [Function],
                                  "shouldWarn": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {
                                    "email": "Required",
                                    "firstName": "Required",
                                    "lastName": "Required",
                                    "password": "Required",
                                    "passwordConfirmation": "Required",
                                    "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                    "referal": "Required",
                                    "role": "Required",
                                  },
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": false,
                                  "validExceptSubmit": false,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              _value={undefined}
                              asyncError={undefined}
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              initial={undefined}
                              label="Email"
                              name="email"
                              normalize={[Function]}
                              pristine={true}
                              required={true}
                              state={undefined}
                              submitError={undefined}
                              submitFailed={undefined}
                              submitting={undefined}
                              syncError="Required"
                              syncWarning={undefined}
                              value={undefined}
                            >
                              <InputWithLabel
                                autoFocus={false}
                                className={null}
                                disabled={null}
                                input={
                                  Object {
                                    "name": "email",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                label="Email"
                                max={null}
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": "Required",
                                    "form": "registration",
                                    "initial": undefined,
                                    "invalid": true,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": false,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                min={null}
                                placeholder={null}
                                required={true}
                              >
                                <div
                                  className="inputWithLabel"
                                >
                                  <Label
                                    for="email"
                                    required={true}
                                    text="Email"
                                  >
                                    <label
                                      className="label"
                                      htmlFor="email"
                                    >
                                      Email
                                       
                                      <abbr
                                        title="Required"
                                      >
                                        *
                                      </abbr>
                                    </label>
                                  </Label>
                                  <Input
                                    autoFocus={false}
                                    disabled={null}
                                    hasError={false}
                                    max={null}
                                    min={null}
                                    name="email"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    type="text"
                                    value=""
                                  >
                                    <input
                                      autoFocus={false}
                                      className="input"
                                      disabled={null}
                                      max={null}
                                      min={null}
                                      name="email"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder={null}
                                      type="text"
                                      value=""
                                    />
                                  </Input>
                                </div>
                              </InputWithLabel>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                      <div
                        className="password"
                      >
                        <Field
                          component={[Function]}
                          label="Password"
                          name="password"
                          required={true}
                          type="password"
                        >
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "registration",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "comment": Object {
                                    "count": 1,
                                    "name": "comment",
                                    "type": "Field",
                                  },
                                  "email": Object {
                                    "count": 1,
                                    "name": "email",
                                    "type": "Field",
                                  },
                                  "firstName": Object {
                                    "count": 1,
                                    "name": "firstName",
                                    "type": "Field",
                                  },
                                  "lastName": Object {
                                    "count": 1,
                                    "name": "lastName",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                  "privacyPolicyAccepted": Object {
                                    "count": 1,
                                    "name": "privacyPolicyAccepted",
                                    "type": "Field",
                                  },
                                  "referal": Object {
                                    "count": 1,
                                    "name": "referal",
                                    "type": "Field",
                                  },
                                  "role": Object {
                                    "count": 1,
                                    "name": "role",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "email": "Required",
                                  "firstName": "Required",
                                  "lastName": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                  "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                  "referal": "Required",
                                  "role": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            label="Password"
                            name="password"
                            normalize={[Function]}
                            required={true}
                            type="password"
                          >
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "registration",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": true,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": Object {
                                    "comment": Object {
                                      "count": 1,
                                      "name": "comment",
                                      "type": "Field",
                                    },
                                    "email": Object {
                                      "count": 1,
                                      "name": "email",
                                      "type": "Field",
                                    },
                                    "firstName": Object {
                                      "count": 1,
                                      "name": "firstName",
                                      "type": "Field",
                                    },
                                    "lastName": Object {
                                      "count": 1,
                                      "name": "lastName",
                                      "type": "Field",
                                    },
                                    "password": Object {
                                      "count": 1,
                                      "name": "password",
                                      "type": "Field",
                                    },
                                    "passwordConfirmation": Object {
                                      "count": 1,
                                      "name": "passwordConfirmation",
                                      "type": "Field",
                                    },
                                    "privacyPolicyAccepted": Object {
                                      "count": 1,
                                      "name": "privacyPolicyAccepted",
                                      "type": "Field",
                                    },
                                    "referal": Object {
                                      "count": 1,
                                      "name": "referal",
                                      "type": "Field",
                                    },
                                    "role": Object {
                                      "count": 1,
                                      "name": "role",
                                      "type": "Field",
                                    },
                                  },
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldError": [Function],
                                  "shouldValidate": [Function],
                                  "shouldWarn": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {
                                    "email": "Required",
                                    "firstName": "Required",
                                    "lastName": "Required",
                                    "password": "Required",
                                    "passwordConfirmation": "Required",
                                    "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                    "referal": "Required",
                                    "role": "Required",
                                  },
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": false,
                                  "validExceptSubmit": false,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              _value={undefined}
                              asyncError={undefined}
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              initial={undefined}
                              label="Password"
                              name="password"
                              normalize={[Function]}
                              pristine={true}
                              required={true}
                              state={undefined}
                              submitError={undefined}
                              submitFailed={undefined}
                              submitting={undefined}
                              syncError="Required"
                              syncWarning={undefined}
                              type="password"
                              value={undefined}
                            >
                              <InputWithLabel
                                autoFocus={false}
                                className={null}
                                disabled={null}
                                input={
                                  Object {
                                    "name": "password",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                label="Password"
                                max={null}
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": "Required",
                                    "form": "registration",
                                    "initial": undefined,
                                    "invalid": true,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": false,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                min={null}
                                placeholder={null}
                                required={true}
                                type="password"
                              >
                                <div
                                  className="inputWithLabel"
                                >
                                  <Label
                                    for="password"
                                    required={true}
                                    text="Password"
                                  >
                                    <label
                                      className="label"
                                      htmlFor="password"
                                    >
                                      Password
                                       
                                      <abbr
                                        title="Required"
                                      >
                                        *
                                      </abbr>
                                    </label>
                                  </Label>
                                  <Input
                                    autoFocus={false}
                                    disabled={null}
                                    hasError={false}
                                    max={null}
                                    min={null}
                                    name="password"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    type="password"
                                    value=""
                                  >
                                    <input
                                      autoFocus={false}
                                      className="input"
                                      disabled={null}
                                      max={null}
                                      min={null}
                                      name="password"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder={null}
                                      type="password"
                                      value=""
                                    />
                                  </Input>
                                </div>
                              </InputWithLabel>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                      <div
                        className="passwordConfirmation"
                      >
                        <Field
                          component={[Function]}
                          label="Password confirmation"
                          name="passwordConfirmation"
                          required={true}
                          type="password"
                        >
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "registration",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "comment": Object {
                                    "count": 1,
                                    "name": "comment",
                                    "type": "Field",
                                  },
                                  "email": Object {
                                    "count": 1,
                                    "name": "email",
                                    "type": "Field",
                                  },
                                  "firstName": Object {
                                    "count": 1,
                                    "name": "firstName",
                                    "type": "Field",
                                  },
                                  "lastName": Object {
                                    "count": 1,
                                    "name": "lastName",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                  "privacyPolicyAccepted": Object {
                                    "count": 1,
                                    "name": "privacyPolicyAccepted",
                                    "type": "Field",
                                  },
                                  "referal": Object {
                                    "count": 1,
                                    "name": "referal",
                                    "type": "Field",
                                  },
                                  "role": Object {
                                    "count": 1,
                                    "name": "role",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "email": "Required",
                                  "firstName": "Required",
                                  "lastName": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                  "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                  "referal": "Required",
                                  "role": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            label="Password confirmation"
                            name="passwordConfirmation"
                            normalize={[Function]}
                            required={true}
                            type="password"
                          >
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "registration",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": true,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": Object {
                                    "comment": Object {
                                      "count": 1,
                                      "name": "comment",
                                      "type": "Field",
                                    },
                                    "email": Object {
                                      "count": 1,
                                      "name": "email",
                                      "type": "Field",
                                    },
                                    "firstName": Object {
                                      "count": 1,
                                      "name": "firstName",
                                      "type": "Field",
                                    },
                                    "lastName": Object {
                                      "count": 1,
                                      "name": "lastName",
                                      "type": "Field",
                                    },
                                    "password": Object {
                                      "count": 1,
                                      "name": "password",
                                      "type": "Field",
                                    },
                                    "passwordConfirmation": Object {
                                      "count": 1,
                                      "name": "passwordConfirmation",
                                      "type": "Field",
                                    },
                                    "privacyPolicyAccepted": Object {
                                      "count": 1,
                                      "name": "privacyPolicyAccepted",
                                      "type": "Field",
                                    },
                                    "referal": Object {
                                      "count": 1,
                                      "name": "referal",
                                      "type": "Field",
                                    },
                                    "role": Object {
                                      "count": 1,
                                      "name": "role",
                                      "type": "Field",
                                    },
                                  },
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldError": [Function],
                                  "shouldValidate": [Function],
                                  "shouldWarn": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {
                                    "email": "Required",
                                    "firstName": "Required",
                                    "lastName": "Required",
                                    "password": "Required",
                                    "passwordConfirmation": "Required",
                                    "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                    "referal": "Required",
                                    "role": "Required",
                                  },
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": false,
                                  "validExceptSubmit": false,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              _value={undefined}
                              asyncError={undefined}
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              initial={undefined}
                              label="Password confirmation"
                              name="passwordConfirmation"
                              normalize={[Function]}
                              pristine={true}
                              required={true}
                              state={undefined}
                              submitError={undefined}
                              submitFailed={undefined}
                              submitting={undefined}
                              syncError="Required"
                              syncWarning={undefined}
                              type="password"
                              value={undefined}
                            >
                              <InputWithLabel
                                autoFocus={false}
                                className={null}
                                disabled={null}
                                input={
                                  Object {
                                    "name": "passwordConfirmation",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                label="Password confirmation"
                                max={null}
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": "Required",
                                    "form": "registration",
                                    "initial": undefined,
                                    "invalid": true,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": false,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                min={null}
                                placeholder={null}
                                required={true}
                                type="password"
                              >
                                <div
                                  className="inputWithLabel"
                                >
                                  <Label
                                    for="passwordConfirmation"
                                    required={true}
                                    text="Password confirmation"
                                  >
                                    <label
                                      className="label"
                                      htmlFor="passwordConfirmation"
                                    >
                                      Password confirmation
                                       
                                      <abbr
                                        title="Required"
                                      >
                                        *
                                      </abbr>
                                    </label>
                                  </Label>
                                  <Input
                                    autoFocus={false}
                                    disabled={null}
                                    hasError={false}
                                    max={null}
                                    min={null}
                                    name="passwordConfirmation"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    type="password"
                                    value=""
                                  >
                                    <input
                                      autoFocus={false}
                                      className="input"
                                      disabled={null}
                                      max={null}
                                      min={null}
                                      name="passwordConfirmation"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder={null}
                                      type="password"
                                      value=""
                                    />
                                  </Input>
                                </div>
                              </InputWithLabel>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                    </div>
                    <div>
                      <div
                        className="referal"
                      >
                        <Field
                          component={[Function]}
                          label="How did you hear from us?"
                          name="referal"
                          required={true}
                        >
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "registration",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "comment": Object {
                                    "count": 1,
                                    "name": "comment",
                                    "type": "Field",
                                  },
                                  "email": Object {
                                    "count": 1,
                                    "name": "email",
                                    "type": "Field",
                                  },
                                  "firstName": Object {
                                    "count": 1,
                                    "name": "firstName",
                                    "type": "Field",
                                  },
                                  "lastName": Object {
                                    "count": 1,
                                    "name": "lastName",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                  "privacyPolicyAccepted": Object {
                                    "count": 1,
                                    "name": "privacyPolicyAccepted",
                                    "type": "Field",
                                  },
                                  "referal": Object {
                                    "count": 1,
                                    "name": "referal",
                                    "type": "Field",
                                  },
                                  "role": Object {
                                    "count": 1,
                                    "name": "role",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "email": "Required",
                                  "firstName": "Required",
                                  "lastName": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                  "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                  "referal": "Required",
                                  "role": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            label="How did you hear from us?"
                            name="referal"
                            normalize={[Function]}
                            required={true}
                          >
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "registration",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": true,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": Object {
                                    "comment": Object {
                                      "count": 1,
                                      "name": "comment",
                                      "type": "Field",
                                    },
                                    "email": Object {
                                      "count": 1,
                                      "name": "email",
                                      "type": "Field",
                                    },
                                    "firstName": Object {
                                      "count": 1,
                                      "name": "firstName",
                                      "type": "Field",
                                    },
                                    "lastName": Object {
                                      "count": 1,
                                      "name": "lastName",
                                      "type": "Field",
                                    },
                                    "password": Object {
                                      "count": 1,
                                      "name": "password",
                                      "type": "Field",
                                    },
                                    "passwordConfirmation": Object {
                                      "count": 1,
                                      "name": "passwordConfirmation",
                                      "type": "Field",
                                    },
                                    "privacyPolicyAccepted": Object {
                                      "count": 1,
                                      "name": "privacyPolicyAccepted",
                                      "type": "Field",
                                    },
                                    "referal": Object {
                                      "count": 1,
                                      "name": "referal",
                                      "type": "Field",
                                    },
                                    "role": Object {
                                      "count": 1,
                                      "name": "role",
                                      "type": "Field",
                                    },
                                  },
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldError": [Function],
                                  "shouldValidate": [Function],
                                  "shouldWarn": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {
                                    "email": "Required",
                                    "firstName": "Required",
                                    "lastName": "Required",
                                    "password": "Required",
                                    "passwordConfirmation": "Required",
                                    "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                    "referal": "Required",
                                    "role": "Required",
                                  },
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": false,
                                  "validExceptSubmit": false,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              _value={undefined}
                              asyncError={undefined}
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              initial={undefined}
                              label="How did you hear from us?"
                              name="referal"
                              normalize={[Function]}
                              pristine={true}
                              required={true}
                              state={undefined}
                              submitError={undefined}
                              submitFailed={undefined}
                              submitting={undefined}
                              syncError="Required"
                              syncWarning={undefined}
                              value={undefined}
                            >
                              <InputWithLabel
                                autoFocus={false}
                                className={null}
                                disabled={null}
                                input={
                                  Object {
                                    "name": "referal",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                label="How did you hear from us?"
                                max={null}
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": "Required",
                                    "form": "registration",
                                    "initial": undefined,
                                    "invalid": true,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": false,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                min={null}
                                placeholder={null}
                                required={true}
                              >
                                <div
                                  className="inputWithLabel"
                                >
                                  <Label
                                    for="referal"
                                    required={true}
                                    text="How did you hear from us?"
                                  >
                                    <label
                                      className="label"
                                      htmlFor="referal"
                                    >
                                      How did you hear from us?
                                       
                                      <abbr
                                        title="Required"
                                      >
                                        *
                                      </abbr>
                                    </label>
                                  </Label>
                                  <Input
                                    autoFocus={false}
                                    disabled={null}
                                    hasError={false}
                                    max={null}
                                    min={null}
                                    name="referal"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    type="text"
                                    value=""
                                  >
                                    <input
                                      autoFocus={false}
                                      className="input"
                                      disabled={null}
                                      max={null}
                                      min={null}
                                      name="referal"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDragStart={[Function]}
                                      onDrop={[Function]}
                                      onFocus={[Function]}
                                      placeholder={null}
                                      type="text"
                                      value=""
                                    />
                                  </Input>
                                </div>
                              </InputWithLabel>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                    </div>
                    <div>
                      <div
                        className="comment"
                      >
                        <Field
                          component={[Function]}
                          label="Comment"
                          name="comment"
                        >
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "registration",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "comment": Object {
                                    "count": 1,
                                    "name": "comment",
                                    "type": "Field",
                                  },
                                  "email": Object {
                                    "count": 1,
                                    "name": "email",
                                    "type": "Field",
                                  },
                                  "firstName": Object {
                                    "count": 1,
                                    "name": "firstName",
                                    "type": "Field",
                                  },
                                  "lastName": Object {
                                    "count": 1,
                                    "name": "lastName",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                  "privacyPolicyAccepted": Object {
                                    "count": 1,
                                    "name": "privacyPolicyAccepted",
                                    "type": "Field",
                                  },
                                  "referal": Object {
                                    "count": 1,
                                    "name": "referal",
                                    "type": "Field",
                                  },
                                  "role": Object {
                                    "count": 1,
                                    "name": "role",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "email": "Required",
                                  "firstName": "Required",
                                  "lastName": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                  "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                  "referal": "Required",
                                  "role": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            component={[Function]}
                            label="Comment"
                            name="comment"
                            normalize={[Function]}
                          >
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "registration",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": true,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": Object {
                                    "comment": Object {
                                      "count": 1,
                                      "name": "comment",
                                      "type": "Field",
                                    },
                                    "email": Object {
                                      "count": 1,
                                      "name": "email",
                                      "type": "Field",
                                    },
                                    "firstName": Object {
                                      "count": 1,
                                      "name": "firstName",
                                      "type": "Field",
                                    },
                                    "lastName": Object {
                                      "count": 1,
                                      "name": "lastName",
                                      "type": "Field",
                                    },
                                    "password": Object {
                                      "count": 1,
                                      "name": "password",
                                      "type": "Field",
                                    },
                                    "passwordConfirmation": Object {
                                      "count": 1,
                                      "name": "passwordConfirmation",
                                      "type": "Field",
                                    },
                                    "privacyPolicyAccepted": Object {
                                      "count": 1,
                                      "name": "privacyPolicyAccepted",
                                      "type": "Field",
                                    },
                                    "referal": Object {
                                      "count": 1,
                                      "name": "referal",
                                      "type": "Field",
                                    },
                                    "role": Object {
                                      "count": 1,
                                      "name": "role",
                                      "type": "Field",
                                    },
                                  },
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldError": [Function],
                                  "shouldValidate": [Function],
                                  "shouldWarn": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {
                                    "email": "Required",
                                    "firstName": "Required",
                                    "lastName": "Required",
                                    "password": "Required",
                                    "passwordConfirmation": "Required",
                                    "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                    "referal": "Required",
                                    "role": "Required",
                                  },
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": false,
                                  "validExceptSubmit": false,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              _value={undefined}
                              asyncError={undefined}
                              asyncValidating={false}
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              initial={undefined}
                              label="Comment"
                              name="comment"
                              normalize={[Function]}
                              pristine={true}
                              state={undefined}
                              submitError={undefined}
                              submitFailed={undefined}
                              submitting={undefined}
                              syncError={undefined}
                              syncWarning={undefined}
                              value={undefined}
                            >
                              <TextAreaWithLabel
                                input={
                                  Object {
                                    "name": "comment",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                label="Comment"
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": undefined,
                                    "form": "registration",
                                    "initial": undefined,
                                    "invalid": false,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": true,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                              >
                                <div
                                  className="textareaWithLabel"
                                >
                                  <Label
                                    for="comment"
                                    required={false}
                                    text="Comment"
                                  >
                                    <label
                                      className="label"
                                      htmlFor="comment"
                                    >
                                      Comment
                                    </label>
                                  </Label>
                                  <TextArea
                                    disabled={false}
                                    name="comment"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    placeholder={null}
                                    resize={true}
                                    rows={3}
                                    value=""
                                  >
                                    <TextareaAutosize
                                      className="textarea"
                                      disabled={false}
                                      inputRef={[Function]}
                                      onChange={[Function]}
                                      onHeightChange={[Function]}
                                      placeholder={null}
                                      rows={3}
                                      useCacheForDOMMeasurements={false}
                                    >
                                      <textarea
                                        className="textarea"
                                        disabled={false}
                                        onChange={[Function]}
                                        placeholder={null}
                                        rows={3}
                                        style={
                                          Object {
                                            "height": 0,
                                          }
                                        }
                                      />
                                    </TextareaAutosize>
                                  </TextArea>
                                </div>
                              </TextAreaWithLabel>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                    </div>
                    <div>
                      <div
                        className="additionalTerms"
                      >
                        <Label
                          for={null}
                          required={false}
                          text="By registrating I accept the following terms:"
                        >
                          <label
                            className="label"
                            htmlFor={null}
                          >
                            By registrating I accept the following terms:
                          </label>
                        </Label>
                        <ul>
                          <li>
                            I will not forward any data or teaching materials to third parties. My colleagues may register themselves on interest.
                          </li>
                          <li>
                            I accept to receive our newsletter per email (e.g notifications about new teaching materials). You may revoke this any time by clicking the provided links in the email or by sending an email to {email}.
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div>
                      <div
                        className="privacyPolicy"
                      >
                        <Field
                          checkboxClassName="privacyPolicyOption"
                          checkboxLabel="I have read and accept the {privacyPolicy} of App Camps."
                          component={[Function]}
                          label="Data protection"
                          name="privacyPolicyAccepted"
                          required={true}
                        >
                          <Connect(ConnectedField)
                            _reduxForm={
                              Object {
                                "anyTouched": false,
                                "array": Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                },
                                "arrayInsert": [Function],
                                "arrayMove": [Function],
                                "arrayPop": [Function],
                                "arrayPush": [Function],
                                "arrayRemove": [Function],
                                "arrayRemoveAll": [Function],
                                "arrayShift": [Function],
                                "arraySplice": [Function],
                                "arraySwap": [Function],
                                "arrayUnshift": [Function],
                                "asyncErrors": undefined,
                                "asyncValidate": [Function],
                                "asyncValidating": false,
                                "autofill": [Function],
                                "blur": [Function],
                                "change": [Function],
                                "clearAsyncError": [Function],
                                "clearSubmit": [Function],
                                "clearSubmitErrors": [Function],
                                "destroy": [Function],
                                "destroyOnUnmount": true,
                                "dirty": false,
                                "dispatch": [Function],
                                "enableReinitialize": false,
                                "error": undefined,
                                "focus": [Function],
                                "forceUnregisterOnUnmount": false,
                                "form": "registration",
                                "getFormState": [Function],
                                "getValues": [Function],
                                "initialValues": undefined,
                                "initialize": [Function],
                                "initialized": false,
                                "invalid": true,
                                "keepDirtyOnReinitialize": false,
                                "persistentSubmitErrors": false,
                                "pristine": true,
                                "pure": true,
                                "register": [Function],
                                "registerField": [Function],
                                "registerInnerOnSubmit": [Function],
                                "registeredFields": Object {
                                  "comment": Object {
                                    "count": 1,
                                    "name": "comment",
                                    "type": "Field",
                                  },
                                  "email": Object {
                                    "count": 1,
                                    "name": "email",
                                    "type": "Field",
                                  },
                                  "firstName": Object {
                                    "count": 1,
                                    "name": "firstName",
                                    "type": "Field",
                                  },
                                  "lastName": Object {
                                    "count": 1,
                                    "name": "lastName",
                                    "type": "Field",
                                  },
                                  "password": Object {
                                    "count": 1,
                                    "name": "password",
                                    "type": "Field",
                                  },
                                  "passwordConfirmation": Object {
                                    "count": 1,
                                    "name": "passwordConfirmation",
                                    "type": "Field",
                                  },
                                  "privacyPolicyAccepted": Object {
                                    "count": 1,
                                    "name": "privacyPolicyAccepted",
                                    "type": "Field",
                                  },
                                  "referal": Object {
                                    "count": 1,
                                    "name": "referal",
                                    "type": "Field",
                                  },
                                  "role": Object {
                                    "count": 1,
                                    "name": "role",
                                    "type": "Field",
                                  },
                                },
                                "reset": [Function],
                                "sectionPrefix": undefined,
                                "setSubmitFailed": [Function],
                                "setSubmitSucceeded": [Function],
                                "shouldAsyncValidate": [Function],
                                "shouldError": [Function],
                                "shouldValidate": [Function],
                                "shouldWarn": [Function],
                                "startAsyncValidation": [Function],
                                "startSubmit": [Function],
                                "stopAsyncValidation": [Function],
                                "stopSubmit": [Function],
                                "submit": [Function],
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "submitting": false,
                                "syncErrors": Object {
                                  "email": "Required",
                                  "firstName": "Required",
                                  "lastName": "Required",
                                  "password": "Required",
                                  "passwordConfirmation": "Required",
                                  "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                  "referal": "Required",
                                  "role": "Required",
                                },
                                "syncWarnings": Object {},
                                "touch": [Function],
                                "touchOnBlur": true,
                                "touchOnChange": false,
                                "triggerSubmit": undefined,
                                "unregister": [Function],
                                "unregisterField": [Function],
                                "untouch": [Function],
                                "updateSyncErrors": [Function],
                                "updateSyncWarnings": [Function],
                                "valid": false,
                                "validExceptSubmit": false,
                                "validate": [Function],
                                "values": Object {},
                                "warning": undefined,
                              }
                            }
                            checkboxClassName="privacyPolicyOption"
                            checkboxLabel="I have read and accept the {privacyPolicy} of App Camps."
                            component={[Function]}
                            label="Data protection"
                            name="privacyPolicyAccepted"
                            normalize={[Function]}
                            required={true}
                          >
                            <ConnectedField
                              _reduxForm={
                                Object {
                                  "anyTouched": false,
                                  "array": Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  },
                                  "arrayInsert": [Function],
                                  "arrayMove": [Function],
                                  "arrayPop": [Function],
                                  "arrayPush": [Function],
                                  "arrayRemove": [Function],
                                  "arrayRemoveAll": [Function],
                                  "arrayShift": [Function],
                                  "arraySplice": [Function],
                                  "arraySwap": [Function],
                                  "arrayUnshift": [Function],
                                  "asyncErrors": undefined,
                                  "asyncValidate": [Function],
                                  "asyncValidating": false,
                                  "autofill": [Function],
                                  "blur": [Function],
                                  "change": [Function],
                                  "clearAsyncError": [Function],
                                  "clearSubmit": [Function],
                                  "clearSubmitErrors": [Function],
                                  "destroy": [Function],
                                  "destroyOnUnmount": true,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "enableReinitialize": false,
                                  "error": undefined,
                                  "focus": [Function],
                                  "forceUnregisterOnUnmount": false,
                                  "form": "registration",
                                  "getFormState": [Function],
                                  "getValues": [Function],
                                  "initialValues": undefined,
                                  "initialize": [Function],
                                  "initialized": false,
                                  "invalid": true,
                                  "keepDirtyOnReinitialize": false,
                                  "persistentSubmitErrors": false,
                                  "pristine": true,
                                  "pure": true,
                                  "register": [Function],
                                  "registerField": [Function],
                                  "registerInnerOnSubmit": [Function],
                                  "registeredFields": Object {
                                    "comment": Object {
                                      "count": 1,
                                      "name": "comment",
                                      "type": "Field",
                                    },
                                    "email": Object {
                                      "count": 1,
                                      "name": "email",
                                      "type": "Field",
                                    },
                                    "firstName": Object {
                                      "count": 1,
                                      "name": "firstName",
                                      "type": "Field",
                                    },
                                    "lastName": Object {
                                      "count": 1,
                                      "name": "lastName",
                                      "type": "Field",
                                    },
                                    "password": Object {
                                      "count": 1,
                                      "name": "password",
                                      "type": "Field",
                                    },
                                    "passwordConfirmation": Object {
                                      "count": 1,
                                      "name": "passwordConfirmation",
                                      "type": "Field",
                                    },
                                    "privacyPolicyAccepted": Object {
                                      "count": 1,
                                      "name": "privacyPolicyAccepted",
                                      "type": "Field",
                                    },
                                    "referal": Object {
                                      "count": 1,
                                      "name": "referal",
                                      "type": "Field",
                                    },
                                    "role": Object {
                                      "count": 1,
                                      "name": "role",
                                      "type": "Field",
                                    },
                                  },
                                  "reset": [Function],
                                  "sectionPrefix": undefined,
                                  "setSubmitFailed": [Function],
                                  "setSubmitSucceeded": [Function],
                                  "shouldAsyncValidate": [Function],
                                  "shouldError": [Function],
                                  "shouldValidate": [Function],
                                  "shouldWarn": [Function],
                                  "startAsyncValidation": [Function],
                                  "startSubmit": [Function],
                                  "stopAsyncValidation": [Function],
                                  "stopSubmit": [Function],
                                  "submit": [Function],
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "submitting": false,
                                  "syncErrors": Object {
                                    "email": "Required",
                                    "firstName": "Required",
                                    "lastName": "Required",
                                    "password": "Required",
                                    "passwordConfirmation": "Required",
                                    "privacyPolicyAccepted": "You need to confirm our privacy policy",
                                    "referal": "Required",
                                    "role": "Required",
                                  },
                                  "syncWarnings": Object {},
                                  "touch": [Function],
                                  "touchOnBlur": true,
                                  "touchOnChange": false,
                                  "triggerSubmit": undefined,
                                  "unregister": [Function],
                                  "unregisterField": [Function],
                                  "untouch": [Function],
                                  "updateSyncErrors": [Function],
                                  "updateSyncWarnings": [Function],
                                  "valid": false,
                                  "validExceptSubmit": false,
                                  "validate": [Function],
                                  "values": Object {},
                                  "warning": undefined,
                                }
                              }
                              _value={undefined}
                              asyncError={undefined}
                              asyncValidating={false}
                              checkboxClassName="privacyPolicyOption"
                              checkboxLabel="I have read and accept the {privacyPolicy} of App Camps."
                              component={[Function]}
                              dirty={false}
                              dispatch={[Function]}
                              initial={undefined}
                              label="Data protection"
                              name="privacyPolicyAccepted"
                              normalize={[Function]}
                              pristine={true}
                              required={true}
                              state={undefined}
                              submitError={undefined}
                              submitFailed={undefined}
                              submitting={undefined}
                              syncError="You need to confirm our privacy policy"
                              syncWarning={undefined}
                              value={undefined}
                            >
                              <CheckboxWithLabel
                                autoFocus={false}
                                checkboxClassName="privacyPolicyOption"
                                checkboxLabel="I have read and accept the {privacyPolicy} of App Camps."
                                className={null}
                                input={
                                  Object {
                                    "name": "privacyPolicyAccepted",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onDragStart": [Function],
                                    "onDrop": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                label="Data protection"
                                meta={
                                  Object {
                                    "active": false,
                                    "asyncValidating": false,
                                    "autofilled": false,
                                    "dirty": false,
                                    "dispatch": [Function],
                                    "error": "You need to confirm our privacy policy",
                                    "form": "registration",
                                    "initial": undefined,
                                    "invalid": true,
                                    "pristine": true,
                                    "submitFailed": false,
                                    "submitting": false,
                                    "touched": false,
                                    "valid": false,
                                    "visited": false,
                                    "warning": undefined,
                                  }
                                }
                                required={true}
                              >
                                <div>
                                  <div
                                    className={null}
                                  >
                                    <Label
                                      for={null}
                                      required={true}
                                      text="Data protection"
                                    >
                                      <label
                                        className="label"
                                        htmlFor={null}
                                      >
                                        Data protection
                                         
                                        <abbr
                                          title="Required"
                                        >
                                          *
                                        </abbr>
                                      </label>
                                    </Label>
                                  </div>
                                  <Checkbox
                                    autoFocus={false}
                                    checked=""
                                    className="privacyPolicyOption"
                                    disabled={false}
                                    hasError={false}
                                    label="I have read and accept the {privacyPolicy} of App Camps."
                                    name="privacyPolicyAccepted"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onDragStart={[Function]}
                                    onDrop={[Function]}
                                    onFocus={[Function]}
                                    value={true}
                                  >
                                    <label
                                      className="label privacyPolicyOption"
                                    >
                                      <input
                                        autoFocus={false}
                                        checked=""
                                        className="input"
                                        disabled={false}
                                        name="privacyPolicyAccepted"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDragStart={[Function]}
                                        onDrop={[Function]}
                                        onFocus={[Function]}
                                        type="checkbox"
                                        value={true}
                                      />
                                      <span />
                                      I have read and accept the {privacyPolicy} of App Camps.
                                    </label>
                                  </Checkbox>
                                </div>
                              </CheckboxWithLabel>
                            </ConnectedField>
                          </Connect(ConnectedField)>
                        </Field>
                      </div>
                    </div>
                    <div
                      className="actions"
                    >
                      <div
                        className="nextButton"
                      >
                        <Spinner
                          visible={false}
                        >
                          <div
                            className="spinner"
                          />
                        </Spinner>
                        <Button
                          className={null}
                          disabled={false}
                          isAction={true}
                          isFullWidth={false}
                          isGreen={false}
                          isSecondary={false}
                          leftIcon={null}
                          onClick={[Function]}
                          rightIcon={null}
                          style={Object {}}
                          type="submit"
                        >
                          <button
                            className="button buttonAction buttonClickable"
                            disabled={false}
                            onClick={[Function]}
                            style={Object {}}
                            type="submit"
                          >
                            Sign up free of charge
                          </button>
                        </Button>
                      </div>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </Registration>
      </Form(Registration)>
    </Connect(Form(Registration))>
  </ReduxForm>
</Provider>
`;
