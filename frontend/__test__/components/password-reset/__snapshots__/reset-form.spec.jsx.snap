// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ResetForm /> renders form correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ReduxForm>
    <Connect(Form(PasswordReset))
      destroyOnUnmount={true}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="passwordResetForm"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      validate={[Function]}
    >
      <Form(PasswordReset)
        anyTouched={false}
        array={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        arrayInsert={[Function]}
        arrayMove={[Function]}
        arrayPop={[Function]}
        arrayPush={[Function]}
        arrayRemove={[Function]}
        arrayRemoveAll={[Function]}
        arrayShift={[Function]}
        arraySplice={[Function]}
        arraySwap={[Function]}
        arrayUnshift={[Function]}
        asyncValidating={false}
        autofill={[Function]}
        blur={[Function]}
        change={[Function]}
        clearAsyncError={[Function]}
        clearSubmit={[Function]}
        clearSubmitErrors={[Function]}
        destroy={[Function]}
        destroyOnUnmount={true}
        dirty={false}
        dispatch={[Function]}
        enableReinitialize={false}
        focus={[Function]}
        forceUnregisterOnUnmount={false}
        form="passwordResetForm"
        getFormState={[Function]}
        initialize={[Function]}
        initialized={false}
        invalid={true}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pristine={true}
        pure={true}
        registerField={[Function]}
        registeredFields={
          Object {
            "password": Object {
              "count": 1,
              "name": "password",
              "type": "Field",
            },
            "passwordConfirmation": Object {
              "count": 1,
              "name": "passwordConfirmation",
              "type": "Field",
            },
          }
        }
        reset={[Function]}
        setSubmitFailed={[Function]}
        setSubmitSucceeded={[Function]}
        shouldAsyncValidate={[Function]}
        shouldError={[Function]}
        shouldValidate={[Function]}
        shouldWarn={[Function]}
        startAsyncValidation={[Function]}
        startSubmit={[Function]}
        stopAsyncValidation={[Function]}
        stopSubmit={[Function]}
        submit={[Function]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        syncErrors={
          Object {
            "password": "Required",
            "passwordConfirmation": "Required",
          }
        }
        syncWarnings={Object {}}
        touch={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
        unregisterField={[Function]}
        untouch={[Function]}
        updateSyncErrors={[Function]}
        updateSyncWarnings={[Function]}
        valid={false}
        validExceptSubmit={false}
        validate={[Function]}
        values={Object {}}
      >
        <PasswordReset
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          asyncValidate={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          dirty={false}
          dispatch={[Function]}
          form="passwordResetForm"
          handleSubmit={[Function]}
          initialize={[Function]}
          initialized={false}
          invalid={true}
          pristine={true}
          pure={true}
          reset={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touch={[Function]}
          untouch={[Function]}
          valid={false}
          validate={[Function]}
        >
          <div
            className="container"
          >
            <Container
              centered={false}
              transparent={false}
            >
              <div
                className="container"
              >
                <h1
                  className="heading"
                >
                  Password reset
                </h1>
                <Link
                  className="loginLink"
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/"
                >
                  <a
                    className="loginLink"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    cancel
                  </a>
                </Link>
                <form
                  className="passwordResetRequestForm"
                  onSubmit={[Function]}
                >
                  <Field
                    component={[Function]}
                    disabled={false}
                    label="Password"
                    name="password"
                    required={true}
                    type="password"
                  >
                    <Connect(ConnectedField)
                      _reduxForm={
                        Object {
                          "anyTouched": false,
                          "array": Object {
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeAll": [Function],
                            "shift": [Function],
                            "splice": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                          },
                          "arrayInsert": [Function],
                          "arrayMove": [Function],
                          "arrayPop": [Function],
                          "arrayPush": [Function],
                          "arrayRemove": [Function],
                          "arrayRemoveAll": [Function],
                          "arrayShift": [Function],
                          "arraySplice": [Function],
                          "arraySwap": [Function],
                          "arrayUnshift": [Function],
                          "asyncErrors": undefined,
                          "asyncValidate": [Function],
                          "asyncValidating": false,
                          "autofill": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearAsyncError": [Function],
                          "clearSubmit": [Function],
                          "clearSubmitErrors": [Function],
                          "destroy": [Function],
                          "destroyOnUnmount": true,
                          "dirty": false,
                          "dispatch": [Function],
                          "enableReinitialize": false,
                          "error": undefined,
                          "focus": [Function],
                          "forceUnregisterOnUnmount": false,
                          "form": "passwordResetForm",
                          "getFormState": [Function],
                          "getValues": [Function],
                          "initialValues": undefined,
                          "initialize": [Function],
                          "initialized": false,
                          "invalid": true,
                          "keepDirtyOnReinitialize": false,
                          "persistentSubmitErrors": false,
                          "pristine": true,
                          "pure": true,
                          "register": [Function],
                          "registerField": [Function],
                          "registerInnerOnSubmit": [Function],
                          "registeredFields": Object {
                            "password": Object {
                              "count": 1,
                              "name": "password",
                              "type": "Field",
                            },
                            "passwordConfirmation": Object {
                              "count": 1,
                              "name": "passwordConfirmation",
                              "type": "Field",
                            },
                          },
                          "reset": [Function],
                          "sectionPrefix": undefined,
                          "setSubmitFailed": [Function],
                          "setSubmitSucceeded": [Function],
                          "shouldAsyncValidate": [Function],
                          "shouldError": [Function],
                          "shouldValidate": [Function],
                          "shouldWarn": [Function],
                          "startAsyncValidation": [Function],
                          "startSubmit": [Function],
                          "stopAsyncValidation": [Function],
                          "stopSubmit": [Function],
                          "submit": [Function],
                          "submitFailed": false,
                          "submitSucceeded": false,
                          "submitting": false,
                          "syncErrors": Object {
                            "password": "Required",
                            "passwordConfirmation": "Required",
                          },
                          "syncWarnings": Object {},
                          "touch": [Function],
                          "touchOnBlur": true,
                          "touchOnChange": false,
                          "triggerSubmit": undefined,
                          "unregister": [Function],
                          "unregisterField": [Function],
                          "untouch": [Function],
                          "updateSyncErrors": [Function],
                          "updateSyncWarnings": [Function],
                          "valid": false,
                          "validExceptSubmit": false,
                          "validate": [Function],
                          "values": Object {},
                          "warning": undefined,
                        }
                      }
                      component={[Function]}
                      disabled={false}
                      label="Password"
                      name="password"
                      normalize={[Function]}
                      required={true}
                      type="password"
                    >
                      <ConnectedField
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "passwordResetForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": true,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": Object {
                              "password": Object {
                                "count": 1,
                                "name": "password",
                                "type": "Field",
                              },
                              "passwordConfirmation": Object {
                                "count": 1,
                                "name": "passwordConfirmation",
                                "type": "Field",
                              },
                            },
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldError": [Function],
                            "shouldValidate": [Function],
                            "shouldWarn": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {
                              "password": "Required",
                              "passwordConfirmation": "Required",
                            },
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": false,
                            "validExceptSubmit": false,
                            "validate": [Function],
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        asyncValidating={false}
                        component={[Function]}
                        dirty={false}
                        disabled={false}
                        dispatch={[Function]}
                        label="Password"
                        name="password"
                        normalize={[Function]}
                        pristine={true}
                        required={true}
                        syncError="Required"
                        type="password"
                      >
                        <InputWithLabel
                          autoFocus={false}
                          className={null}
                          disabled={false}
                          input={
                            Object {
                              "name": "password",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onDragStart": [Function],
                              "onDrop": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          label="Password"
                          max={null}
                          meta={
                            Object {
                              "active": false,
                              "asyncValidating": false,
                              "autofilled": false,
                              "dirty": false,
                              "dispatch": [Function],
                              "error": "Required",
                              "form": "passwordResetForm",
                              "initial": undefined,
                              "invalid": true,
                              "pristine": true,
                              "submitFailed": false,
                              "submitting": false,
                              "touched": false,
                              "valid": false,
                              "visited": false,
                              "warning": undefined,
                            }
                          }
                          min={null}
                          placeholder={null}
                          required={true}
                          type="password"
                        >
                          <div
                            className="inputWithLabel"
                          >
                            <Label
                              for="password"
                              required={true}
                              text="Password"
                            >
                              <label
                                className="label"
                                htmlFor="password"
                              >
                                Password
                                 
                                <abbr
                                  title="Required"
                                >
                                  *
                                </abbr>
                              </label>
                            </Label>
                            <Input
                              autoFocus={false}
                              disabled={false}
                              hasError={false}
                              max={null}
                              min={null}
                              name="password"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onDragStart={[Function]}
                              onDrop={[Function]}
                              onFocus={[Function]}
                              placeholder={null}
                              type="password"
                              value=""
                            >
                              <input
                                autoFocus={false}
                                className="input"
                                disabled={false}
                                max={null}
                                min={null}
                                name="password"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onDragStart={[Function]}
                                onDrop={[Function]}
                                onFocus={[Function]}
                                placeholder={null}
                                type="password"
                                value=""
                              />
                            </Input>
                          </div>
                        </InputWithLabel>
                      </ConnectedField>
                    </Connect(ConnectedField)>
                  </Field>
                  <Field
                    component={[Function]}
                    disabled={false}
                    label="Password confirmation"
                    name="passwordConfirmation"
                    required={true}
                    type="password"
                  >
                    <Connect(ConnectedField)
                      _reduxForm={
                        Object {
                          "anyTouched": false,
                          "array": Object {
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeAll": [Function],
                            "shift": [Function],
                            "splice": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                          },
                          "arrayInsert": [Function],
                          "arrayMove": [Function],
                          "arrayPop": [Function],
                          "arrayPush": [Function],
                          "arrayRemove": [Function],
                          "arrayRemoveAll": [Function],
                          "arrayShift": [Function],
                          "arraySplice": [Function],
                          "arraySwap": [Function],
                          "arrayUnshift": [Function],
                          "asyncErrors": undefined,
                          "asyncValidate": [Function],
                          "asyncValidating": false,
                          "autofill": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearAsyncError": [Function],
                          "clearSubmit": [Function],
                          "clearSubmitErrors": [Function],
                          "destroy": [Function],
                          "destroyOnUnmount": true,
                          "dirty": false,
                          "dispatch": [Function],
                          "enableReinitialize": false,
                          "error": undefined,
                          "focus": [Function],
                          "forceUnregisterOnUnmount": false,
                          "form": "passwordResetForm",
                          "getFormState": [Function],
                          "getValues": [Function],
                          "initialValues": undefined,
                          "initialize": [Function],
                          "initialized": false,
                          "invalid": true,
                          "keepDirtyOnReinitialize": false,
                          "persistentSubmitErrors": false,
                          "pristine": true,
                          "pure": true,
                          "register": [Function],
                          "registerField": [Function],
                          "registerInnerOnSubmit": [Function],
                          "registeredFields": Object {
                            "password": Object {
                              "count": 1,
                              "name": "password",
                              "type": "Field",
                            },
                            "passwordConfirmation": Object {
                              "count": 1,
                              "name": "passwordConfirmation",
                              "type": "Field",
                            },
                          },
                          "reset": [Function],
                          "sectionPrefix": undefined,
                          "setSubmitFailed": [Function],
                          "setSubmitSucceeded": [Function],
                          "shouldAsyncValidate": [Function],
                          "shouldError": [Function],
                          "shouldValidate": [Function],
                          "shouldWarn": [Function],
                          "startAsyncValidation": [Function],
                          "startSubmit": [Function],
                          "stopAsyncValidation": [Function],
                          "stopSubmit": [Function],
                          "submit": [Function],
                          "submitFailed": false,
                          "submitSucceeded": false,
                          "submitting": false,
                          "syncErrors": Object {
                            "password": "Required",
                            "passwordConfirmation": "Required",
                          },
                          "syncWarnings": Object {},
                          "touch": [Function],
                          "touchOnBlur": true,
                          "touchOnChange": false,
                          "triggerSubmit": undefined,
                          "unregister": [Function],
                          "unregisterField": [Function],
                          "untouch": [Function],
                          "updateSyncErrors": [Function],
                          "updateSyncWarnings": [Function],
                          "valid": false,
                          "validExceptSubmit": false,
                          "validate": [Function],
                          "values": Object {},
                          "warning": undefined,
                        }
                      }
                      component={[Function]}
                      disabled={false}
                      label="Password confirmation"
                      name="passwordConfirmation"
                      normalize={[Function]}
                      required={true}
                      type="password"
                    >
                      <ConnectedField
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "passwordResetForm",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": undefined,
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": true,
                            "keepDirtyOnReinitialize": false,
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": Object {
                              "password": Object {
                                "count": 1,
                                "name": "password",
                                "type": "Field",
                              },
                              "passwordConfirmation": Object {
                                "count": 1,
                                "name": "passwordConfirmation",
                                "type": "Field",
                              },
                            },
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldError": [Function],
                            "shouldValidate": [Function],
                            "shouldWarn": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {
                              "password": "Required",
                              "passwordConfirmation": "Required",
                            },
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": false,
                            "validExceptSubmit": false,
                            "validate": [Function],
                            "values": Object {},
                            "warning": undefined,
                          }
                        }
                        asyncValidating={false}
                        component={[Function]}
                        dirty={false}
                        disabled={false}
                        dispatch={[Function]}
                        label="Password confirmation"
                        name="passwordConfirmation"
                        normalize={[Function]}
                        pristine={true}
                        required={true}
                        syncError="Required"
                        type="password"
                      >
                        <InputWithLabel
                          autoFocus={false}
                          className={null}
                          disabled={false}
                          input={
                            Object {
                              "name": "passwordConfirmation",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onDragStart": [Function],
                              "onDrop": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          label="Password confirmation"
                          max={null}
                          meta={
                            Object {
                              "active": false,
                              "asyncValidating": false,
                              "autofilled": false,
                              "dirty": false,
                              "dispatch": [Function],
                              "error": "Required",
                              "form": "passwordResetForm",
                              "initial": undefined,
                              "invalid": true,
                              "pristine": true,
                              "submitFailed": false,
                              "submitting": false,
                              "touched": false,
                              "valid": false,
                              "visited": false,
                              "warning": undefined,
                            }
                          }
                          min={null}
                          placeholder={null}
                          required={true}
                          type="password"
                        >
                          <div
                            className="inputWithLabel"
                          >
                            <Label
                              for="passwordConfirmation"
                              required={true}
                              text="Password confirmation"
                            >
                              <label
                                className="label"
                                htmlFor="passwordConfirmation"
                              >
                                Password confirmation
                                 
                                <abbr
                                  title="Required"
                                >
                                  *
                                </abbr>
                              </label>
                            </Label>
                            <Input
                              autoFocus={false}
                              disabled={false}
                              hasError={false}
                              max={null}
                              min={null}
                              name="passwordConfirmation"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onDragStart={[Function]}
                              onDrop={[Function]}
                              onFocus={[Function]}
                              placeholder={null}
                              type="password"
                              value=""
                            >
                              <input
                                autoFocus={false}
                                className="input"
                                disabled={false}
                                max={null}
                                min={null}
                                name="passwordConfirmation"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onDragStart={[Function]}
                                onDrop={[Function]}
                                onFocus={[Function]}
                                placeholder={null}
                                type="password"
                                value=""
                              />
                            </Input>
                          </div>
                        </InputWithLabel>
                      </ConnectedField>
                    </Connect(ConnectedField)>
                  </Field>
                  <div
                    className="actions"
                  >
                    <span
                      className="submit"
                    >
                      <Spinner
                        visible={false}
                      >
                        <div
                          className="spinner"
                        />
                      </Spinner>
                      <Button
                        className={null}
                        disabled={false}
                        isAction={true}
                        isFullWidth={false}
                        isGreen={false}
                        isSecondary={false}
                        leftIcon={null}
                        onClick={[Function]}
                        rightIcon="angle-right"
                        style={Object {}}
                        type="submit"
                      >
                        <button
                          className="button buttonAction buttonClickable"
                          disabled={false}
                          onClick={[Function]}
                          style={Object {}}
                          type="submit"
                        >
                          Send
                          <span
                            className="rightIcon large"
                          >
                            <FaIcon
                              className={null}
                              icon="angle-right"
                            >
                              <i
                                aria-hidden="true"
                                className="fa fa-angle-right"
                              />
                            </FaIcon>
                          </span>
                        </button>
                      </Button>
                    </span>
                  </div>
                </form>
              </div>
            </Container>
          </div>
        </PasswordReset>
      </Form(PasswordReset)>
    </Connect(Form(PasswordReset))>
  </ReduxForm>
</Provider>
`;
