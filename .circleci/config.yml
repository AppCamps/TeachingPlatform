version: 2

jobs:
  build:
    docker:
      - image: appcamps/www-test:r2.4.2-n8.8.1
        environment:
          PGHOST: localhost
          PGUSER: appcamps
          DATABASE_URL: "postgres://appcamps@localhost:5432/appcamps_test"
          RAILS_ENV: test
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_USER: appcamps
          POSTGRES_DB: appcamps_test
          POSTGRES_PASSWORD: ""
    working_directory: ~/www
    steps:
      - add_ssh_keys:
          fingerprints:
            - "88:16:d8:c1:65:71:b3:9d:00:9e:eb:64:be:74:5e:d2"
      - checkout
      - restore_cache:
          name: Restore bundle cache
          keys:
            - r2.4.2-www-bundler-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - r2.4.2-www-bundler-{{ .Branch }}-
            - r2.4.2-www-bundler-master-{{ checksum "Gemfile.lock" }}
            - r2.4.2-www-bundler-master
            - r2.4.2-www-bundler
      - restore_cache:
          name: Restore yarn cache
          keys:
            - n8.8.1-www-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - n8.8.1-www-yarn-{{ .Branch }}-
            - n8.8.1-www-yarn-master-{{ checksum "yarn.lock" }}
            - n8.8.1-www-yarn-master
            - n8.8.1-www-yarn
      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle ||  bundle install --path vendor/bundle --jobs 4 --retry 3
      - run:
          name: Greenkeeper update Lockfile
          command: greenkeeper-lockfile-update
      - run:
          name: Yarn Install
          command: yarn install --pure-lockfile
      - run:
          name: Greenkeeper upload Lockfile
          command: greenkeeper-lockfile-upload
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace
      - run:
          name: Run tests
          command: |
            COVERAGE=true bundle exec rspec --format doc
            yarn run test:coverage -- --maxWorkers=1
      - run:
          name: Lint code
          command: |
            bundle exec rubocop -DP
            yarn run eslint
      - run:
          name: Build
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              bundle exec rake assets:precompile
              yarn run build
            else
              echo 'skipping build'
            fi
      - run:
          name: Checking for vulnerabilities
          command: |
            bundle exec bundle audit check --update
            auditjs -l error
      - run: bash .circleci/setup-heroku.sh
      - deploy:
          name: Deploy to staging
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo -ne '\n' | ./scripts/deploy staging
            else
              echo 'skipping deployment: not on master branch'
            fi
      - save_cache:
          name: Store bundle cache
          key: r2.4.2-www-bundler-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          name: Store yarn cache
          key: n8.8.1-www-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.yarn-cache
            - node_modules

workflows:
  version: 2
  commit:
    jobs:
      - build
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
